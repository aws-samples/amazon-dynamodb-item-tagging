#!/usr/bin/env node

/*!
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: MIT-0
*/

import 'source-map-support/register';
import * as cdk from 'aws-cdk-lib';
import { DynamodbItemTaggingStack } from './amazon-dynamodb-item-tagging-stack';
import { Aspects } from 'aws-cdk-lib';
import { AwsSolutionsChecks, NagSuppressions } from 'cdk-nag';

const app = new cdk.App();
const stack = new DynamodbItemTaggingStack(app, 'DynamodbItemTaggingStack', {});


NagSuppressions.addResourceSuppressions(stack, [
  {
    id: 'AwsSolutions-IAM4',
    reason: 'CDK autogenerated - AWSLambdaBasicExecutionRole is valid in this case',
  },
  {
    id: 'AwsSolutions-IAM5',
    reason: 'CDK autogenerated - Valid to read all indices',
  },
  {
    id: 'AwsSolutions-APIG1',
    reason: 'Access logging not required for this simple walk through',
  },
  {
    id: 'AwsSolutions-APIG2',
    reason: 'Lambdas are running in proxy mode, performing their own request validation',
  },
  {
    id: 'AwsSolutions-APIG3',
    reason: 'WAF not enabled for this simple walk through',
  },
  {
    id: 'AwsSolutions-APIG4',
    reason: 'API Gateway authorization not enabled for this simple walk through',
  },
  {
    id: 'AwsSolutions-COG4',
    reason: 'API Gateway authorization not enabled for this simple walk through',
  },
], true
);

Aspects.of(app).add(new AwsSolutionsChecks());
